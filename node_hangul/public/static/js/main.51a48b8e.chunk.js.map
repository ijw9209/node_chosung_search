{"version":3,"sources":["components/Header.js","components/Title.js","components/Master.js","components/Log.js","components/Worker.js","components/Cache.js","config/Constants.js","lib/axiosRequest.js","App.js","serviceWorker.js","index.js"],"names":["Header","gap","text","Box","display","alignItems","justifyContent","mx","mt","height","fontSize","bgcolor","brown","Title","title","textAlign","m","Master","master","lastIndexedCount","searching","flexDirection","mb","pid","mem","toLocaleString","lastIndexedDate","style","Log","currentLog","logStyle","flexGrow","flexShrink","flexBasis","overflow","textOverflow","map","log","marginLeft","marginTop","color","cacheHit","eventTime","userId","ip","elapsed","resultCount","Tooltip","keyword","width","Worker","workers","smallFontSize","length","mediumFontSize","bigFontSize","flexWrap","worker","p","words","Cache","caches","cache","cacheCount","constants","SOCKET_NAMESPACE","urls","axiosRequest","get","type","url","CONSTANTS","Promise","resolve","success","msg","axios","response","status","console","data","error","BrownButton","withStyles","root","backgroundColor","Button","App","state","cacheWorkers","endpoint","Constants","socket","socketIOClient","on","this","updateMasterMonitor","bind","updateWorkerMonitor","updateCacheWorkerMonitor","updateLogMonitor","resetState","masterMonitor","setState","workerMonitor","cacheWorkerMonitor","logMonitor","result","className","onClick","onClickLoad","variant","size","onClickClear","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51a48b8e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Header({gap, text}) {\r\n    return (\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" mx={gap} mt={gap} height=\"10vh\" fontSize=\"h3.fontSize\" bgcolor={brown[900]}>\r\n        {text}\r\n      </Box>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Title({gap, title}) {\r\n    return (\r\n        <Box textAlign={'center'} bgcolor={brown[700]} m={gap}>{title}</Box>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Master({gap, master}) {\r\n  const lastIndexedCount = master.lastIndexedCount ? master.lastIndexedCount : 0;\r\n  const {searching = 0} = master;\r\n  return (\r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\" \r\n          justifyContent=\"space-around\" \r\n          alignItems=\"center\" \r\n          height='20vh' \r\n          mx={gap} \r\n          mb={gap} \r\n          fontSize=\"fontSize\" \r\n          bgcolor={brown[700]}\r\n        >\r\n          <Box display=\"flex\" justifyContent=\"flex-start\" flexDirection=\"column\" m={2} textAlign=\"left\">\r\n            <div>PID: {master.pid}</div> \r\n            <div>MEM: {master.mem}</div>\r\n            <p></p>\r\n            <div>TOTAL INDEXED : {lastIndexedCount.toLocaleString()}</div>\r\n            <div>LAST INDEXED DATE: {master.lastIndexedDate}</div>\r\n\r\n          </Box>\r\n          <Box>\r\n             <div style={{fontSize:\"12px\"}}>Searching</div>\r\n             <div style={{fontSize:\"60px\"}}>{searching}</div> \r\n          </Box> \r\n        </Box>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function Log({gap, currentLog}) {\r\n  const logStyle = {display:'flex', flexGrow:0, flexShrink:1, flexBasis:\"130px\", overflow:'hidden'};\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow={3} mx={gap} mb={gap} overflow=\"auto\" textOverflow=\"ellipsis\" fontSize=\"12px\" bgcolor={brown[700]}>\r\n      {currentLog.map(log => (\r\n        <div style={{display:\"flex\", marginLeft:\"10px\", marginTop:'3px', flexDirection:\"row\", justifyContent:\"flex-start\", height:\"1.2em\", color: log.cacheHit && 'cyan'}}>\r\n          <div style={logStyle}>{log.eventTime}</div>\r\n          <div style={logStyle}>{log.userId}</div>\r\n          <div style={logStyle}>{log.ip}</div>\r\n          <div style={logStyle}>{log.elapsed}초</div>\r\n          <div style={logStyle }>{log.resultCount}건</div>\r\n          <Tooltip title={log.keyword}>\r\n            <div style={{display:'flex', flexShrink:0, flexBasis:\"auto\", width:'300px', overflow:'hidden', textOverflow:'ellipsis'}}>{log.keyword}</div>\r\n          </Tooltip>\r\n        </div>\r\n      ))}\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Worker({gap, workers}) {\r\n  const smallFontSize = `${12 - (workers.length/3)}px`;\r\n  const mediumFontSize = `${15 - (workers.length/3)}px`;\r\n  const bigFontSize = `${25 - (workers.length/3)}px`;\r\n\r\n  return (\r\n      // <Box flexGrow={1} flexBasis={0} bgcolor={brown[800]}>\r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\"\r\n          justifyContent=\"center\" \r\n          alignItems=\"center\" \r\n          flexWrap=\"wrap\" \r\n          flexGrow=\"1\" \r\n          mx={gap} \r\n          mb={gap} \r\n          bgcolor={brown[700]}\r\n        >\r\n          {workers.map(worker => \r\n            <Box \r\n              display=\"flex\" \r\n              flexDirection=\"row\" \r\n              justifyContent=\"center\" \r\n              alignItems=\"center\" \r\n              m={1} \r\n              fontSize={mediumFontSize} \r\n              bgcolor={brown[600]}\r\n            >\r\n              <Box display=\"flex\" overflow=\"auto\" justifyContent=\"flex-start\" flexDirection=\"column\" textAlign=\"left\" p={2}>\r\n                <div>PID: {worker.pid}</div>\r\n                <div>WORDS: {worker.words.toLocaleString()}</div>\r\n                <p></p>\r\n                <Box textAlign=\"center\" style={{fontSize:smallFontSize}}>MEM</Box>\r\n                <div style={{fontSize:bigFontSize}}>{worker.mem}</div>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      // </Box>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Cache({gap, caches}) {\r\n  const smallFontSize = `${10 - (caches.length/3)}px`;\r\n  const mediumFontSize = `${13 - (caches.length/3)}px`;\r\n  const bigFontSize = `${22 - (caches.length/3)}px`;\r\n\r\n  return (\r\n    <Box \r\n     display=\"flex\" \r\n     flexDirection=\"row\"\r\n     justifyContent=\"center\" \r\n     alignItems=\"center\" \r\n     flexWrap=\"wrap\" \r\n     height=\"20vh\"\r\n     mx={gap} \r\n     bgcolor={brown[700]}\r\n    >\r\n      {caches.map(cache => \r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\" \r\n          justifyContent=\"center\" \r\n          alignItems=\"center\"\r\n          m={1} \r\n          fontSize={mediumFontSize} \r\n          bgcolor={brown[600]}\r\n        >\r\n          <Box display=\"flex\" overflow=\"auto\" justifyContent=\"flex-start\" flexDirection=\"column\" p={2} textAlign=\"left\">\r\n            <div>PID: {cache.pid}</div>\r\n            <div>COUNT: {cache.cacheCount}</div>\r\n            <div>CACHE HIT: {cache.cacheHit}</div>\r\n            <Box textAlign=\"center\" style={{fontSize:smallFontSize}}>MEM</Box>\r\n            <div style={{fontSize:bigFontSize}}>{cache.mem}</div>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n","const constants = {   \r\n    SOCKET_NAMESPACE : '/',\r\n    urls : {\r\n        'load': '/loadSong/useWorkers',\r\n        'clear': '/clearSong'\r\n    }\r\n}\r\n\r\nexport default constants;","import axios from 'axios';\r\nimport CONSTANTS from '../config/Constants';\r\n\r\nconst axiosRequest = {\r\n    async get(type){\r\n        try {\r\n            const url = CONSTANTS.urls[type];\r\n            if(!url) return Promise.resolve({success:false, msg:`not valid type : ${type}`});\r\n            const response = await axios.get(url);\r\n            if(response.status === 200){\r\n                console.log(response.data)\r\n                return response.data;\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n\r\n        }\r\n    },\r\n}\r\n\r\nexport default axiosRequest;","import React, {Component} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport socketIOClient from 'socket.io-client';\r\nimport Header from './components/Header';\r\nimport Title from './components/Title';\r\nimport Master from './components/Master';\r\nimport Log from './components/Log';\r\nimport Worker from './components/Worker';\r\nimport Cache from './components/Cache';\r\nimport Constants from './config/Constants';\r\nimport {brown} from '@material-ui/core/colors';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport axiosRequest from './lib/axiosRequest';\r\nimport './App.css';\r\n\r\nconst BrownButton = withStyles({\r\n  root: {\r\n    backgroundColor: brown[800],\r\n    '&:hover': {\r\n      backgroundColor: brown[500],\r\n    },\r\n    '&:active': {\r\n      backgroundColor: brown[300]\r\n    },\r\n  }\r\n})(Button)\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      master : {},\r\n      workers : [],\r\n      cacheWorkers : [],\r\n      currentLog : []\r\n    }\r\n  }  \r\n  \r\n  componentDidMount(){\r\n    // connect socket server\r\n    const {endpoint} = Constants.SOCKET_NAMESPACE;\r\n    const socket = socketIOClient(endpoint);\r\n    socket.on('connect', () => {\r\n      console.log('socket connected');\r\n    })\r\n    socket.on('masterMonitor', this.updateMasterMonitor.bind(this));\r\n    socket.on('workerMonitor', this.updateWorkerMonitor.bind(this));\r\n    socket.on('cacheWorkerMonitor', this.updateCacheWorkerMonitor.bind(this));\r\n    socket.on('logMonitor', this.updateLogMonitor.bind(this));\r\n    socket.on('error', this.resetState.bind(this));\r\n    socket.on('disconnect', this.resetState.bind(this));\r\n    socket.on('connect_error', this.resetState.bind(this));\r\n  }\r\n\r\n  updateMasterMonitor(masterMonitor){\r\n    // console.log('update master:',masterMonitor)\r\n    this.setState({\r\n      ...this.state,\r\n      master: masterMonitor\r\n    })\r\n  }\r\n\r\n  updateWorkerMonitor(workerMonitor){\r\n    //console.log('update workers:',workerMonitor)\r\n    this.setState({\r\n      ...this.state,\r\n      workers: workerMonitor\r\n    })\r\n  }\r\n\r\n  updateCacheWorkerMonitor(cacheWorkerMonitor){\r\n    this.setState({\r\n      ...this.state,\r\n      cacheWorkers: cacheWorkerMonitor\r\n    })\r\n  }\r\n\r\n  updateLogMonitor(logMonitor){\r\n    console.log('update log:',logMonitor)\r\n    this.setState({\r\n      ...this.state,\r\n      currentLog: logMonitor\r\n    })\r\n  }\r\n\r\n  resetState(){\r\n    this.setState({\r\n      master : {},\r\n      workers : [],\r\n      currentLog : []\r\n    })\r\n  }\r\n\r\n  async onClickLoad(){\r\n    const result = await axiosRequest.get('load');\r\n    console.log(result);\r\n  }\r\n\r\n  async onClickClear(){\r\n    const result = await axiosRequest.get('clear');\r\n    console.log(result);\r\n  }\r\n\r\n  render() {\r\n    const {workers, master, currentLog, cacheWorkers} = this.state;\r\n    const gap = 0.3;\r\n    return (\r\n      <Box display=\"flex\" flexDirection=\"column\" height=\"100vh\" className=\"App\">\r\n        <Header gap={gap} text={\"Status\"}></Header>\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"stretch\" height=\"80vh\">\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow=\"1\" width=\"45vw\"> \r\n            <Title gap={gap} title={'master'}></Title>\r\n            <Master gap={gap} master={master}></Master>\r\n            <Log gap={gap} currentLog={currentLog}></Log>\r\n          </Box>\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow=\"1\"  width='45vw'> \r\n            <Title gap={gap} title={'cache'}></Title>\r\n            <Cache gap={gap} caches={cacheWorkers}></Cache>            \r\n            <Title gap={gap} title={'worker'}></Title>\r\n            <Worker gap={gap} workers={workers}></Worker>\r\n          </Box>\r\n        </Box>\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-around\" alignItems=\"center\" flexGrow=\"1\" mx={gap} mb={gap} bgcolor={brown[900]}>\r\n            <BrownButton onClick={this.onClickLoad} variant=\"contained\" color=\"primary\"  size=\"medium\">load</BrownButton> \r\n            <BrownButton onClick={this.onClickClear} variant=\"contained\" color=\"primary\"  size=\"medium\">clear</BrownButton>\r\n          </Box>\r\n      </Box>\r\n    )\r\n  }\r\n} ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}