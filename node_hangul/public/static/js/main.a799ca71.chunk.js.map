{"version":3,"sources":["components/Header.js","components/Title.js","components/Master.js","components/Log.js","components/Worker.js","components/Cache.js","config/Constants.js","lib/axiosRequest.js","App.js","serviceWorker.js","index.js"],"names":["Header","text","Box","display","alignItems","justifyContent","height","width","fontSize","bgcolor","brown","Title","title","textAlign","m","Master","master","lastIndexedCount","searching","flexDirection","mx","mb","pid","mem","toLocaleString","lastIndexedDate","style","Log","currentLog","logStyle","flexGrow","flexShrink","flexBasis","overflow","textOverflow","map","log","marginLeft","marginTop","color","cacheHit","eventTime","userId","ip","elapsed","resultCount","Tooltip","keyword","Worker","workers","smallFontSize","length","mediumFontSize","bigFontSize","flexWrap","worker","p","words","Cache","caches","cache","cacheCount","constants","SOCKET_NAMESPACE","urls","axiosRequest","get","type","url","CONSTANTS","Promise","resolve","success","msg","axios","response","status","console","data","error","BrownButton","withStyles","root","backgroundColor","Button","App","state","cacheWorkers","endpoint","Constants","socket","socketIOClient","on","this","updateMasterMonitor","bind","updateWorkerMonitor","updateCacheWorkerMonitor","updateLogMonitor","resetState","masterMonitor","setState","workerMonitor","cacheWorkerMonitor","logMonitor","result","className","onClick","onClickLoad","variant","size","onClickClear","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a799ca71.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Header({text}) {\r\n    return (\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height=\"10vh\" width=\"100%\" fontSize=\"h3.fontSize\" bgcolor={brown[900]}>\r\n        <div>{text}</div>\r\n      </Box>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Title({title}) {\r\n    return (\r\n        <Box textAlign={'center'} bgcolor={brown[700]} m={0.5}>{title}</Box>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Master({master}) {\r\n  const lastIndexedCount = master.lastIndexedCount ? master.lastIndexedCount : 0;\r\n  const {searching = 0} = master;\r\n  return (\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-around\" alignItems=\"center\" height='20vh' mx={0.5} mb={0.5} fontSize=\"fontSize\" bgcolor={brown[700]}>\r\n          <Box display=\"flex\" justifyContent=\"flex-start\" flexDirection=\"column\" m={2} textAlign=\"left\">\r\n            <div>PID: {master.pid}</div> \r\n            <div>MEM: {master.mem}</div>\r\n            <p></p>\r\n            <div>TOTAL INDEXED : {lastIndexedCount.toLocaleString()}</div>\r\n            <div>LAST INDEXED DATE: {master.lastIndexedDate}</div>\r\n\r\n          </Box>\r\n          <Box>\r\n             <div style={{fontSize:\"12px\"}}>Searching</div>\r\n             <div style={{fontSize:\"60px\"}}>{searching}</div> \r\n          </Box> \r\n        </Box>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function Log({currentLog}) {\r\n  const logStyle = {display:'flex', flexGrow:0, flexShrink:1, flexBasis:\"130px\", overflow:'hidden'};\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow={3} mx={0.5} mb={0.5} overflow=\"auto\" textOverflow=\"ellipsis\" fontSize=\"12px\" bgcolor={brown[700]}>\r\n      {currentLog.map(log => (\r\n        <div style={{display:\"flex\", marginLeft:\"10px\", marginTop:'3px', flexDirection:\"row\", justifyContent:\"flex-start\", height:\"1.2em\", color: log.cacheHit && 'cyan'}}>\r\n          <div style={logStyle}>{log.eventTime}</div>\r\n          <div style={logStyle}>{log.userId}</div>\r\n          <div style={logStyle}>{log.ip}</div>\r\n          <div style={logStyle}>{log.elapsed}초</div>\r\n          <div style={logStyle }>{log.resultCount}건</div>\r\n          <Tooltip title={log.keyword}>\r\n            <div style={{display:'flex', flexShrink:0, flexBasis:\"auto\", width:'300px', overflow:'hidden', textOverflow:'ellipsis'}}>{log.keyword}</div>\r\n          </Tooltip>\r\n        </div>\r\n      ))}\r\n    </Box>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Worker({workers}) {\r\n  const smallFontSize = `${12 - (workers.length/3)}px`;\r\n  const mediumFontSize = `${15 - (workers.length/3)}px`;\r\n  const bigFontSize = `${25 - (workers.length/3)}px`;\r\n\r\n  return (\r\n      // <Box flexGrow={1} flexBasis={0} bgcolor={brown[800]}>\r\n        <Box display=\"flex\" flexDirection={'row'} justifyContent=\"center\" alignItems=\"flex-start\" flexWrap=\"wrap\" mx={0.5} height='100vh' bgcolor={brown[700]}>\r\n          {workers.map(worker => \r\n            <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\" \r\n                //  width={workers.length < 10 ? '30%':'20%'} \r\n                m={1} fontSize={mediumFontSize} bgcolor={brown[600]}>\r\n              <Box display=\"flex\" overflow=\"auto\" justifyContent=\"flex-start\" flexDirection=\"column\" textAlign=\"left\" p={2}>\r\n                <div>PID: {worker.pid}</div>\r\n                <div>WORDS: {worker.words.toLocaleString()}</div>\r\n                <p></p>\r\n                <Box textAlign=\"center\" style={{fontSize:smallFontSize}}>MEM</Box>\r\n                <div style={{fontSize:bigFontSize}}>{worker.mem}</div>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      // </Box>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Cache({caches}) {\r\n  const smallFontSize = `${10 - (caches.length/3)}px`;\r\n  const mediumFontSize = `${13 - (caches.length/3)}px`;\r\n  const bigFontSize = `${22 - (caches.length/3)}px`;\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection={'row'} justifyContent=\"center\" alignItems=\"flext-start\" flexWrap=\"wrap\" mx={0.5} mb={0.5} bgcolor={brown[700]}>\r\n      {caches.map(cache => \r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"center\" \r\n            //  width={workers.length < 10 ? '30%':'20%'} \r\n              m={1} fontSize={mediumFontSize} bgcolor={brown[600]}>\r\n          <Box display=\"flex\" overflow=\"auto\" justifyContent=\"flex-start\" flexDirection=\"column\" p={2} textAlign=\"left\">\r\n            <div>PID: {cache.pid}</div>\r\n            <div>COUNT: {cache.cacheCount}</div>\r\n            <div>CACHE HIT: {cache.cacheHit}</div>\r\n            <p></p>\r\n            <Box textAlign=\"center\" style={{fontSize:smallFontSize}}>MEM</Box>\r\n            <div style={{fontSize:bigFontSize}}>{cache.mem}</div>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n","const constants = {   \r\n    SOCKET_NAMESPACE : '/',\r\n    urls : {\r\n        'load': '/loadSong/useWorkers',\r\n        'clear': '/clearSong'\r\n    }\r\n}\r\n\r\nexport default constants;","import axios from 'axios';\r\nimport CONSTANTS from '../config/Constants';\r\n\r\nconst axiosRequest = {\r\n    async get(type){\r\n        try {\r\n            const url = CONSTANTS.urls[type];\r\n            if(!url) return Promise.resolve({success:false, msg:`not valid type : ${type}`});\r\n            const response = await axios.get(url);\r\n            if(response.status === 200){\r\n                console.log(response.data)\r\n                return response.data;\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n\r\n        }\r\n    },\r\n}\r\n\r\nexport default axiosRequest;","import React, {Component} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport socketIOClient from 'socket.io-client';\r\nimport Header from './components/Header';\r\nimport Title from './components/Title';\r\nimport Master from './components/Master';\r\nimport Log from './components/Log';\r\nimport Worker from './components/Worker';\r\nimport Cache from './components/Cache';\r\nimport Constants from './config/Constants';\r\nimport {brown} from '@material-ui/core/colors';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport axiosRequest from './lib/axiosRequest';\r\nimport './App.css';\r\n\r\nconst BrownButton = withStyles({\r\n  root: {\r\n    backgroundColor: brown[800],\r\n    '&:hover': {\r\n      backgroundColor: brown[500],\r\n    },\r\n    '&:active': {\r\n      backgroundColor: brown[300]\r\n    },\r\n  }\r\n})(Button)\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      master : {},\r\n      workers : [],\r\n      cacheWorkers : [],\r\n      currentLog : []\r\n    }\r\n  }  \r\n  \r\n  componentDidMount(){\r\n    // connect socket server\r\n    const {endpoint} = Constants.SOCKET_NAMESPACE;\r\n    const socket = socketIOClient(endpoint);\r\n    socket.on('connect', () => {\r\n      console.log('socket connected');\r\n    })\r\n    socket.on('masterMonitor', this.updateMasterMonitor.bind(this));\r\n    socket.on('workerMonitor', this.updateWorkerMonitor.bind(this));\r\n    socket.on('cacheWorkerMonitor', this.updateCacheWorkerMonitor.bind(this));\r\n    socket.on('logMonitor', this.updateLogMonitor.bind(this));\r\n    socket.on('error', this.resetState.bind(this));\r\n    socket.on('disconnect', this.resetState.bind(this));\r\n    socket.on('connect_error', this.resetState.bind(this));\r\n  }\r\n\r\n  updateMasterMonitor(masterMonitor){\r\n    // console.log('update master:',masterMonitor)\r\n    this.setState({\r\n      ...this.state,\r\n      master: masterMonitor\r\n    })\r\n  }\r\n\r\n  updateWorkerMonitor(workerMonitor){\r\n    //console.log('update workers:',workerMonitor)\r\n    this.setState({\r\n      ...this.state,\r\n      workers: workerMonitor\r\n    })\r\n  }\r\n\r\n  updateCacheWorkerMonitor(cacheWorkerMonitor){\r\n    this.setState({\r\n      ...this.state,\r\n      cacheWorkers: cacheWorkerMonitor\r\n    })\r\n  }\r\n\r\n  updateLogMonitor(logMonitor){\r\n    console.log('update log:',logMonitor)\r\n    this.setState({\r\n      ...this.state,\r\n      currentLog: logMonitor\r\n    })\r\n  }\r\n\r\n  resetState(){\r\n    this.setState({\r\n      master : {},\r\n      workers : [],\r\n      currentLog : []\r\n    })\r\n  }\r\n\r\n  async onClickLoad(){\r\n    const result = await axiosRequest.get('load');\r\n    console.log(result);\r\n  }\r\n\r\n  async onClickClear(){\r\n    const result = await axiosRequest.get('clear');\r\n    console.log(result);\r\n  }\r\n\r\n  render() {\r\n    const {workers, master, currentLog, cacheWorkers} = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Header text={\"Status\"}></Header>\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"stretch\" height=\"80vh\">\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow=\"1\" width=\"45vw\"> \r\n            <Title title={'master'}></Title>\r\n            <Master master={master}></Master>\r\n            <Log currentLog={currentLog}></Log>\r\n          </Box>\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow=\"1\" width='45vw'> \r\n            <Title title={'worker'}></Title>\r\n            <Worker workers={workers}></Worker>\r\n            <Title title={'cache'}></Title>\r\n            <Cache caches={cacheWorkers}></Cache>\r\n          </Box>\r\n        </Box>\r\n        <Box height=\"10vh\" display=\"flex\" justifyContent=\"space-around\" flexDirection=\"row\" alignItems=\"center\" bgcolor={brown[900]}>\r\n          <BrownButton onClick={this.onClickLoad} variant=\"contained\" color=\"primary\" size=\"medium\">load</BrownButton> \r\n          <BrownButton onClick={this.onClickClear} variant=\"contained\" color=\"primary\" size=\"medium\">clear</BrownButton>\r\n        </Box>\r\n      </div>\r\n    )\r\n  }\r\n} ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}