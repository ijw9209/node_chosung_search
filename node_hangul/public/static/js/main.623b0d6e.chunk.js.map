{"version":3,"sources":["components/Header.js","components/Title.js","components/Master.js","components/Log.js","components/Worker.js","components/Cache.js","config/Constants.js","components/PrettoSlide.js","lib/axiosRequest.js","App.js","serviceWorker.js","index.js"],"names":["Header","gap","text","Box","display","alignItems","justifyContent","mx","mt","height","fontSize","bgcolor","brown","Title","title","textAlign","m","React","memo","master","lastIndexedCount","searching","flexDirection","mb","pid","mem","toLocaleString","lastIndexedDate","style","currentLog","console","log","ColorBox","props","cacheHit","children","color","defaultStyle","flexGrow","flexShrink","margin","minWidth","flexBasis","overflow","textOverflow","map","eventTime","userId","ip","replace","elapsed","resultCount","whiteSpace","keyword","workers","smallFontSize","length","mediumFontSize","bigFontSize","flexWrap","worker","p","words","caches","cache","cacheCount","constants","SOCKET_NAMESPACE","urls","PrettoSlider","withStyles","root","padding","thumb","active","valueLabel","left","track","borderRadius","rail","Slider","CustomizedSlider","value","onChange","valueLabelDisplay","axiosRequest","get","type","url","CONSTANTS","Promise","resolve","success","msg","axios","response","status","data","error","BrownButton","backgroundColor","Button","App","onClickLoad","a","setState","state","onIndexing","result","onClickLoadFromDB","onClickClear","indexDone","cacheWorkers","progress","endpoint","Constants","socket","socketIOClient","on","this","updateMasterMonitor","bind","updateWorkerMonitor","updateCacheWorkerMonitor","updateLogMonitor","updateProgress","resetState","masterMonitor","indexingStatus","workerMonitor","cacheWorkerMonitor","logMonitor","disalbeClearIndexBtn","disalbeClearCacheBtn","disableLoadDBBtn","disableLoadFileBtn","className","width","PrettoSlide","handleSliderChange","aria-labelledby","Tooltip","open","placement","disabled","onClick","variant","size","onClickCacheClear","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.623b0d6e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Header({gap, text}) {\r\n    return (\r\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" mx={gap} mt={gap} height=\"10vh\" fontSize=\"h3.fontSize\" bgcolor={brown[900]}>\r\n        {text}\r\n      </Box>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Title({gap, title}) {\r\n    return (\r\n        <Box textAlign={'center'} bgcolor={brown[700]} m={gap}>{title}</Box>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nfunction Master({gap, master}) {\r\n  const lastIndexedCount = master.lastIndexedCount ? master.lastIndexedCount : 0;\r\n  const {searching = 0} = master;\r\n  return (\r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\" \r\n          justifyContent=\"space-around\" \r\n          alignItems=\"center\" \r\n          height='20vh' \r\n          mx={gap} \r\n          mb={gap} \r\n          fontSize=\"fontSize\" \r\n          bgcolor={brown[700]}\r\n        >\r\n          <Box display=\"flex\" justifyContent=\"flex-start\" flexDirection=\"column\" m={2} textAlign=\"left\">\r\n            <div>PID: {master.pid}</div> \r\n            <div>MEM: {master.mem}</div>\r\n            <p></p>\r\n            <div>TOTAL INDEXED : {lastIndexedCount.toLocaleString()}</div>\r\n            <div>LAST INDEXED DATE: {master.lastIndexedDate}</div>\r\n\r\n          </Box>\r\n          <Box>\r\n             <div style={{fontSize:\"12px\"}}>Searching</div>\r\n             <div style={{fontSize:\"60px\"}}>{searching}</div> \r\n          </Box> \r\n        </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(Master);","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nfunction Log({gap, currentLog}) {\r\n  console.log('rerendering Log : ', currentLog);\r\n  const logStyle = {display:'flex', flexGrow:0, flexShrink:0, flexBasis:\"130px\", overflow:'hidden'};\r\n  const ConditionalTooltip = ({keyword, children}) => {\r\n    if(keyword.length > 50){\r\n      return <Tooltip title={keyword}>{children}</Tooltip>\r\n    } else {\r\n      return <div>{children}</div>\r\n    }\r\n  }\r\n  const ColorBox = (props) => {\r\n    const {cacheHit, children} = props;\r\n    return <Box color={cacheHit && 'cyan'}>{children}</Box>\r\n  }\r\n  const defaultStyle = {flexGrow:1, flexShrink:5, margin:'3px', minWidth:'120px', flexBasis:'120px'};\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow={3} mx={gap} overflow=\"auto\" textOverflow=\"ellipsis\" fontSize=\"12px\" bgcolor={brown[700]}>\r\n      <Box style={{...defaultStyle, minWidth:'120px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit}>{log.eventTime}</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexBasis:'80', minWidth:'60px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit}>{log.userId}</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexBasis:'80', minWidth:'60px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit}>{log.ip.replace('::ffff:','')}</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexBasis:'80', minWidth:'60px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit}>{log.elapsed}초</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexBasis:'80', minWidth:'60px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit}>{log.resultCount}건</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexGrow:5, flexShrink:1, overflow:'hidden', whiteSpace:'nowrap', textOverflow:'ellipsis'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit}>{log.keyword}</ColorBox>)}\r\n      </Box>\r\n      {/* {currentLog.map(log => (\r\n        <div style={{display:\"flex\", marginLeft:\"10px\", marginTop:'3px', flexDirection:\"row\", justifyContent:\"flex-start\", height:\"1.2em\", color: log.cacheHit && 'cyan'}}>\r\n          <div style={{minWidth:'120px',...logStyle}}>{log.eventTime}</div>\r\n          <div style={{minWidth:'60px',...logStyle}}>{log.userId}</div>\r\n          <div style={{minWidth:'80px',...logStyle}}>{log.ip}</div>\r\n          <div style={{minWidth:'60px',...logStyle}}>{log.elapsed}초</div>\r\n          <div style={{minWidth:'60px',...logStyle} }>{log.resultCount}건</div>\r\n          <ConditionalTooltip keyword={log.keyword}>\r\n            <div style={{display:'flex', flexShrink:0, flexBasis:\"auto\", minWidth:'200px', maxWidth:'300px', overflow:'hidden', textOverflow:'ellipsis'}}>{log.keyword}</div>\r\n          </ConditionalTooltip>\r\n\r\n        </div>\r\n      ))} */}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(Log);","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nfunction Worker({gap, workers}) {\r\n  const smallFontSize = `${12 - (workers.length/3)}px`;\r\n  const mediumFontSize = `${15 - (workers.length/3)}px`;\r\n  const bigFontSize = `${25 - (workers.length/3)}px`;\r\n\r\n  return (\r\n      // <Box flexGrow={1} flexBasis={0} bgcolor={brown[800]}>\r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\"\r\n          justifyContent=\"center\" \r\n          alignItems=\"center\" \r\n          flexWrap=\"wrap\" \r\n          flexGrow=\"1\" \r\n          mx={gap} \r\n          overflow=\"hidden\"\r\n          // mb={gap} \r\n          bgcolor={brown[700]}\r\n        >\r\n          {workers.map(worker => \r\n            <Box \r\n              display=\"flex\" \r\n              flexDirection=\"row\" \r\n              justifyContent=\"center\" \r\n              alignItems=\"center\" \r\n              m={1} \r\n              fontSize={mediumFontSize} \r\n              bgcolor={brown[600]}\r\n            >\r\n              <Box display=\"flex\" overflow=\"auto\" justifyContent=\"flex-start\" flexDirection=\"column\" textAlign=\"left\" p={2}>\r\n                <div>PID: {worker.pid}</div>\r\n                <div>WORDS: {worker.words.toLocaleString()}</div>\r\n                <p></p>\r\n                <Box textAlign=\"center\" style={{fontSize:smallFontSize}}>MEM</Box>\r\n                <div style={{fontSize:bigFontSize}}>{worker.mem}</div>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      // </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(Worker);","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nfunction Cache({gap, caches}) {\r\n  const smallFontSize = `${10 - (caches.length/3)}px`;\r\n  const mediumFontSize = `${13 - (caches.length/3)}px`;\r\n  const bigFontSize = `${22 - (caches.length/3)}px`;\r\n\r\n  return (\r\n    <Box \r\n     display=\"flex\" \r\n     flexDirection=\"row\"\r\n     justifyContent=\"center\" \r\n     alignItems=\"center\" \r\n     flexWrap=\"wrap\" \r\n     height=\"20vh\"\r\n     mx={gap} \r\n     bgcolor={brown[700]}\r\n     overflow=\"hidden\"\r\n    >\r\n      {caches.map(cache => \r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\" \r\n          justifyContent=\"center\" \r\n          alignItems=\"center\"\r\n          m={1} \r\n          fontSize={mediumFontSize} \r\n          bgcolor={brown[600]}\r\n        >\r\n          <Box display=\"flex\" overflow=\"auto\" justifyContent=\"flex-start\" flexDirection=\"column\" p={2} textAlign=\"left\">\r\n            <div>PID: {cache.pid}</div>\r\n            <div>COUNT: {cache.cacheCount}</div>\r\n            <div>CACHE HIT: {cache.cacheHit}</div>\r\n            <Box textAlign=\"center\" style={{fontSize:smallFontSize}}>MEM</Box>\r\n            <div style={{fontSize:bigFontSize}}>{cache.mem}</div>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(Cache);","const constants = {   \r\n    SOCKET_NAMESPACE : '/',\r\n    urls : {\r\n        'load': '/loadSong/useWorkers',\r\n        'loadFromDB': '/loadSong/useWorkers?from=db',        \r\n        'clear': '/clearSong',\r\n        'clearCache': '/clearCache'\r\n    }\r\n}\r\n\r\nexport default constants;","import React from 'react';\r\nimport {withStyles} from '@material-ui/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n      color: '#52af77',\r\n      height: '5px',\r\n      padding : 0,\r\n\r\n    },\r\n    // thumb: {\r\n    //   height: 10,\r\n    //   width: 10,\r\n    //   backgroundColor: '#fff',\r\n    //   border: '2px solid currentColor',\r\n    //   marginTop: -8,\r\n    //   marginLeft: -12,\r\n    //   '&:focus,&:hover,&$active': {\r\n    //     boxShadow: 'inherit',\r\n    //   },\r\n    // },\r\n    thumb : {\r\n      display: 'none'\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n      height: 5,\r\n      borderRadius: 0,\r\n    },\r\n    rail: {\r\n      height: 5,\r\n      borderRadius: 0,\r\n    },\r\n  })(Slider);\r\n\r\nconst CustomizedSlider = ({value, onChange}) => {\r\n    return (\r\n        <PrettoSlider value={value} onChange={onChange} valueLabelDisplay=\"auto\"></PrettoSlider>\r\n    )\r\n}\r\n\r\nexport default CustomizedSlider;","import axios from 'axios';\r\nimport CONSTANTS from '../config/Constants';\r\n\r\nconst axiosRequest = {\r\n    async get(type){\r\n        try {\r\n            const url = CONSTANTS.urls[type];\r\n            if(!url) return Promise.resolve({success:false, msg:`not valid type : ${type}`});\r\n            const response = await axios.get(url);\r\n            if(response.status === 200){\r\n                console.log(response.data)\r\n                return response.data;\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n\r\n        }\r\n    },\r\n}\r\n\r\nexport default axiosRequest;","import React, {Component} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport socketIOClient from 'socket.io-client';\r\nimport Header from './components/Header';\r\nimport Title from './components/Title';\r\nimport Master from './components/Master';\r\nimport Log from './components/Log';\r\nimport Worker from './components/Worker';\r\nimport Cache from './components/Cache';\r\nimport Constants from './config/Constants';\r\nimport PrettoSlide from './components/PrettoSlide';\r\nimport {brown} from '@material-ui/core/colors';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport axiosRequest from './lib/axiosRequest';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport './App.css';\r\n\r\nconst BrownButton = withStyles({\r\n  root: {\r\n    backgroundColor: brown[800],\r\n    '&:hover': {\r\n      backgroundColor: brown[500],\r\n    },\r\n    '&:active': {\r\n      backgroundColor: brown[300]\r\n    },\r\n  }\r\n})(Button)\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      master : {},\r\n      workers : [],\r\n      cacheWorkers : [],\r\n      currentLog : [],\r\n      progress: 0,\r\n      // disableLoadDBBtn: false,\r\n      // disableLoadFileBtn: false,\r\n      // disalbeClearIndexBtn: true,\r\n      // disalbeClearCacheBtn: true,\r\n      onIndexing: false,\r\n      indexDone: true\r\n\r\n    }\r\n  }  \r\n  \r\n  componentDidMount(){\r\n    // connect socket server\r\n    const {endpoint} = Constants.SOCKET_NAMESPACE;\r\n    const socket = socketIOClient(endpoint);\r\n    socket.on('connect', () => {\r\n      console.log('socket connected');\r\n    })\r\n    socket.on('masterMonitor', this.updateMasterMonitor.bind(this));\r\n    socket.on('workerMonitor', this.updateWorkerMonitor.bind(this));\r\n    socket.on('cacheWorkerMonitor', this.updateCacheWorkerMonitor.bind(this));\r\n    socket.on('logMonitor', this.updateLogMonitor.bind(this));\r\n    socket.on('progress', this.updateProgress.bind(this))\r\n    socket.on('error', this.resetState.bind(this));\r\n    socket.on('disconnect', this.resetState.bind(this));\r\n    socket.on('connect_error', this.resetState.bind(this));\r\n  }\r\n\r\n  updateMasterMonitor(masterMonitor){\r\n    console.log('update master:',masterMonitor)\r\n    const {indexingStatus} = masterMonitor;\r\n    const onIndexing = (indexingStatus === 'INDEXING');\r\n    const indexDone = (indexingStatus === 'INDEX_DONE');\r\n    this.setState({\r\n      ...this.state,\r\n      master: masterMonitor,\r\n      onIndexing,\r\n      indexDone\r\n    })\r\n  }\r\n\r\n  updateWorkerMonitor(workerMonitor){\r\n    // console.log('update workers:',workerMonitor)\r\n    this.setState({\r\n      ...this.state,\r\n      workers: workerMonitor\r\n    })\r\n  }\r\n\r\n  updateCacheWorkerMonitor(cacheWorkerMonitor){\r\n    this.setState({\r\n      ...this.state,\r\n      cacheWorkers: cacheWorkerMonitor\r\n    })\r\n  }\r\n\r\n  updateLogMonitor(logMonitor){\r\n    console.log('update log:',logMonitor);\r\n    this.setState({\r\n      ...this.state,\r\n      currentLog: logMonitor\r\n    })\r\n  }\r\n\r\n  updateProgress(progress){\r\n    const indexDone = (progress > 99.9);\r\n    console.log('update progress: ',progress, indexDone);\r\n    this.setState({\r\n      ...this.state,\r\n      progress,\r\n      disalbeClearIndexBtn: !indexDone,\r\n      disalbeClearCacheBtn: !indexDone,\r\n      onIndexing: !indexDone\r\n    })\r\n  }\r\n\r\n  resetState(){\r\n    this.setState({\r\n      master : {},\r\n      workers : [],\r\n      currentLog : [],\r\n      cacheWorkers : []\r\n    })\r\n  }\r\n\r\n  onClickLoad =  async () => {\r\n    this.setState({\r\n      ...this.state,\r\n      // disableLoadDBBtn: true,\r\n      // disableLoadFileBtn: true,\r\n      // disalbeClearCacheBtn: true,\r\n      // disalbeClearIndexBtn: true,\r\n      onIndexing: true,\r\n    })\r\n    const result = await axiosRequest.get('load');\r\n    console.log(result);\r\n  }\r\n\r\n  onClickLoadFromDB = async () => {\r\n    this.setState({\r\n      ...this.state,\r\n      // disableLoadDBBtn: true,\r\n      // disableLoadFileBtn: true,\r\n      // disalbeClearCacheBtn: true,\r\n      // disalbeClearIndexBtn: true,\r\n      onIndexing: true\r\n    })\r\n    const result = await axiosRequest.get('loadFromDB');\r\n    console.log(result);  \r\n  }\r\n\r\n  onClickClear = async () => {    \r\n    const result = await axiosRequest.get('clear');\r\n    this.setState({\r\n      ...this.state,\r\n      // disableLoadDBBtn: false,\r\n      // disableLoadFileBtn: false\r\n      indexDone: false\r\n    })\r\n    console.log(result);\r\n  }\r\n\r\n  async onClickCacheClear(){\r\n    const result = await axiosRequest.get('clearCache');\r\n    console.log(result);\r\n  }\r\n\r\n  handleSliderChange(){\r\n    console.log('changed');\r\n  }\r\n\r\n  render() {\r\n    const {workers, master, currentLog, cacheWorkers, progress} = this.state;\r\n    const {onIndexing, indexDone} = this.state;\r\n    // const {disalbeClearCacheBtn, disalbeClearIndexBtn} = this.state;\r\n    const disableLoadDBBtn = onIndexing || indexDone;\r\n    const disableLoadFileBtn = onIndexing || indexDone;\r\n    const disalbeClearIndexBtn = onIndexing || !indexDone;\r\n    const disalbeClearCacheBtn = onIndexing || !indexDone;\r\n    const gap = 0.3;\r\n    return (\r\n      <Box display=\"flex\" flexDirection=\"column\" height=\"100vh\" className=\"App\">\r\n        <Header gap={gap} text={\"Status\"}></Header>\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"stretch\" height=\"80vh\">\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow=\"1\" width=\"45vw\"> \r\n            <Title gap={gap} title={'master'}></Title>\r\n            <Master gap={gap} master={master}></Master>\r\n            <Log gap={gap} currentLog={currentLog}></Log>\r\n          </Box>\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow=\"1\"  width='45vw'> \r\n            <Title gap={gap} title={'cache'}></Title>\r\n            <Cache gap={gap} caches={cacheWorkers}></Cache>            \r\n            <Title gap={gap} title={'worker'}></Title>\r\n            <Worker gap={gap} workers={workers}></Worker>\r\n          </Box>\r\n        </Box>\r\n        <PrettoSlide value={progress} onChange={this.handleSliderChange} aria-labelledby=\"continuous-slider\" />\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-around\" alignItems=\"center\" flexGrow=\"1\" mx={gap} mb={gap} bgcolor={brown[900]}>\r\n          <Tooltip open={disableLoadDBBtn} title={onIndexing ? \"Wait indexing...\" : \"Clear Index first!\"} placement=\"right-end\">\r\n            <BrownButton disabled={disableLoadDBBtn} onClick={this.onClickLoadFromDB} variant=\"contained\" color=\"primary\"  size=\"medium\">load from DB</BrownButton>         \r\n          </Tooltip>  \r\n          <Tooltip open={disableLoadFileBtn} title={onIndexing ? \"Wait indexing...\" : \"Clear Index first!\"} placement=\"right-end\">\r\n            <BrownButton disabled={disableLoadFileBtn} onClick={this.onClickLoad} variant=\"contained\" color=\"primary\"  size=\"medium\">load from file</BrownButton> \r\n          </Tooltip> \r\n          <Tooltip open={onIndexing} title=\"Wait indexing...\" placement=\"right-end\">\r\n            <BrownButton disabled={disalbeClearIndexBtn} onClick={this.onClickClear} variant=\"contained\" color=\"primary\"  size=\"medium\">clear index</BrownButton>\r\n          </Tooltip> \r\n            <BrownButton disabled={disalbeClearCacheBtn} onClick={this.onClickCacheClear} variant=\"contained\" color=\"primary\"  size=\"medium\">clear cache</BrownButton>\r\n          </Box>\r\n      </Box>\r\n    )\r\n  }\r\n} ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}