{"version":3,"sources":["components/Header.js","components/Title.js","components/Master.js","components/Scheduler.js","components/Log.js","components/Worker.js","components/Cache.js","config/Constants.js","components/PrettoSlide.js","lib/axiosRequest.js","App.js","serviceWorker.js","index.js"],"names":["Header","gap","text","insert","update","deleteCount","Box","display","width","alignItems","justifyContent","mx","mt","height","fontSize","bgcolor","brown","textAlign","flexDirection","ml","minWidth","mr","color","my","Title","title","m","React","memo","master","lastIndexedCount","lastIndexedPercent","searching","overflow","pid","mem","toLocaleString","lastIndexedDate","style","mb","currentLog","console","log","ConditionalTooltip","props","keyword","children","length","Tooltip","ColorBox","cacheHit","defaultStyle","flexGrow","flexShrink","margin","flexBasis","textOverflow","map","eventTime","userId","ip","replace","elapsed","resultCount","whiteSpace","workers","smallFontSize","mediumFontSize","bigFontSize","flexWrap","worker","p","words","caches","cache","cacheCount","constants","SOCKET_NAMESPACE","urls","PrettoSlider","withStyles","root","padding","thumb","active","valueLabel","left","track","borderRadius","rail","Slider","CustomizedSlider","value","onChange","valueLabelDisplay","axiosRequest","get","type","url","CONSTANTS","Promise","resolve","success","msg","axios","response","status","data","error","BrownButton","backgroundColor","Button","App","onClickLoad","a","setState","state","startingIndex","onIndexing","result","onClickLoadFromDB","onClickClear","indexDone","cacheWorkers","progress","insertCount","updateCount","endpoint","Constants","socket","socketIOClient","on","this","updateMasterMonitor","bind","updateWorkerMonitor","updateCacheWorkerMonitor","updateLogMonitor","updateScheduledIndexMonitor","updateProgress","resetState","masterMonitor","indexingStatus","workerMonitor","cacheWorkerMonitor","logMonitor","scheduledIndexMonitor","disalbeClearIndexBtn","disalbeClearCacheBtn","scheduler","disableLoadDBBtn","disableLoadFileBtn","className","delete","PrettoSlide","handleSliderChange","aria-labelledby","open","placement","disabled","onClick","variant","size","onClickCacheClear","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a84ec5c7.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nexport default function Header({gap, text, insert=0, update=0, deleteCount=0}) {\r\n    return (\r\n      <Box display=\"flex\">\r\n        <Box display=\"flex\" width=\"1\" alignItems=\"center\" justifyContent=\"center\" mx={gap} mt={gap} height=\"10vh\" fontSize=\"h3.fontSize\" bgcolor={brown[900]}>\r\n          <Box width=\"1\" textAlign=\"center\" mx=\"auto\" >\r\n            {text}\r\n          </Box>\r\n          <Box bgcolor={brown[700]} display=\"flex\" width=\"10%\" justifyContent=\"center\" flexDirection=\"column\" ml=\"auto\" minWidth=\"100px\" mr=\"10px\">\r\n            <Box mt=\"4px\" ml=\"10px\" color=\"white\" fontSize=\"caption.fontSize\">Insert : {insert}</Box>\r\n            <Box mt=\"4px\" ml=\"10px\" color=\"white\" fontSize=\"caption.fontSize\">Update : {update}</Box>\r\n            <Box my=\"4px\" ml=\"10px\" color=\"white\" fontSize=\"caption.fontSize\">Delete : {deleteCount}</Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    )\r\n}\r\n ","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nexport default function Title({gap, title}) {\r\n    return (\r\n        <Box textAlign={'center'} bgcolor={brown[700]} m={gap}>{title}</Box>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nfunction Master({gap, master}) {\r\n  const lastIndexedCount = master.lastIndexedCount ? master.lastIndexedCount : 0;\r\n  const lastIndexedPercent = master.lastIndexedPercent ? master.lastIndexedPercent : '0%';\r\n  const {searching = 0} = master;\r\n  return (\r\n      <Box display=\"flex\" height=\"20vh\" flexDirection=\"column\">      \r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\" \r\n          justifyContent=\"space-around\" \r\n          alignItems=\"center\" \r\n          // height=\"1\"\r\n          height='20vh' \r\n          mx={gap} \r\n          // mb={gap} \r\n          fontSize=\"fontSize\" \r\n          bgcolor={brown[700]}\r\n          overflow=\"hidden\"\r\n        >\r\n          <Box display=\"flex\" justifyContent=\"flex-start\" flexDirection=\"column\" m={2} textAlign=\"left\">\r\n            <div>PID: {master.pid}</div> \r\n            <div>MEM: {master.mem}</div>\r\n            <p></p>\r\n            <div>TOTAL INDEXED : {lastIndexedCount.toLocaleString()}</div>\r\n            <div>TOTAL PERCENT : {lastIndexedPercent.toLocaleString()}</div>\r\n            <div>LAST INDEXED DATE : {master.lastIndexedDate}</div>\r\n\r\n          </Box>\r\n          <Box>\r\n             <div style={{fontSize:\"12px\"}}>Searching</div>\r\n             <div style={{fontSize:\"60px\"}}>{searching}</div> \r\n          </Box> \r\n        </Box>\r\n          {/* <Box \r\n          bgcolor={brown[800]}\r\n          mx={gap}  \r\n          fontSize=\"fontSize\" \r\n          textAlign=\"center\"\r\n          mb={gap} \r\n        >\r\n            last indexed : {master.lastIndexedDate}\r\n        </Box> */}\r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(Master);","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nfunction Master({gap, master}) {\r\n  // const lastIndexedCount = master.lastIndexedCount ? master.lastIndexedCount : 0;\r\n  // const lastIndexedPercent = master.lastIndexedPercent ? master.lastIndexedPercent : '0%';\r\n  // const {searching = 0} = master;\r\n  const lastExecuted = '2020/07/09 23:22:01'\r\n  return (\r\n      <Box display=\"flex\" height=\"20vh\" flexDirection=\"column\">\r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\" \r\n          justifyContent=\"space-around\" \r\n          alignItems=\"center\" \r\n          height=\"1\"\r\n          mx={gap}  \r\n          fontSize=\"fontSize\" \r\n          bgcolor={brown[700]}\r\n          overflow=\"hidden\"\r\n        >\r\n          <Box>\r\n             <div style={{fontSize:\"12px\"}}>Insert</div>\r\n             <div style={{fontSize:\"60px\"}}>{\"0\"}</div> \r\n          </Box> \r\n          <Box>\r\n             <div style={{fontSize:\"12px\"}}>Update</div>\r\n             <div style={{fontSize:\"60px\"}}>{\"0\"}</div> \r\n          </Box> \r\n          <Box>\r\n             <div style={{fontSize:\"12px\"}}>Delete</div>\r\n             <div style={{fontSize:\"60px\"}}>{\"0\"}</div> \r\n          </Box> \r\n        </Box>\r\n        <Box \r\n          bgcolor={brown[800]}\r\n          mx={gap}  \r\n          fontSize=\"fontSize\" \r\n          textAlign=\"center\"\r\n          mb={gap} \r\n        >\r\n            last execution : {lastExecuted}\r\n        </Box>\r\n      </Box>\r\n\r\n  )\r\n}\r\n\r\nexport default React.memo(Master);","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nfunction Log({gap, currentLog}) {\r\n  console.log('rerendering Log : ', currentLog);\r\n  const logStyle = {display:'flex', flexGrow:0, flexShrink:0, flexBasis:\"130px\", overflow:'hidden'};\r\n  const ConditionalTooltip = props => {\r\n    const {keyword, children} = props;\r\n    if(keyword.length > 20){\r\n      return <Tooltip title={keyword}>{children}</Tooltip>\r\n    } else {\r\n      return <div>{children}</div>\r\n    }\r\n  }\r\n  const ColorBox = props => {\r\n    const {cacheHit, children} = props;\r\n    return <div style={{\"color\": cacheHit && \"cyan\"}}>{children}</div>\r\n  }\r\n  const defaultStyle = {flexGrow:1, flexShrink:5, margin:'3px', minWidth:'120px', flexBasis:'120px'};\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow={3} mt={gap} mx={gap} overflow=\"auto\" textOverflow=\"ellipsis\" fontSize=\"12px\" bgcolor={brown[700]} style={{\"overflowX\":\"hidden\"}}>\r\n      <Box style={{...defaultStyle, minWidth:'120px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit}>{log.eventTime}</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexBasis:'80', minWidth:'60px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit}>{log.userId}</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexBasis:'80', minWidth:'60px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit}>{log.ip.replace('::ffff:','')}</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexBasis:'80', minWidth:'60px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit}>{log.elapsed}초</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexBasis:'80', minWidth:'60px'}}>\r\n        {currentLog.map(log => <ColorBox cacheHit={log.cacheHit}>{log.resultCount}건</ColorBox>)}\r\n      </Box>\r\n      <Box style={{...defaultStyle, flexGrow:5, flexShrink:1, whiteSpace:'nowrap', textOverflow:'ellipsis'}}>\r\n        {currentLog.map(log => \r\n          (\r\n          <ConditionalTooltip keyword={log.keyword}>\r\n            <div style={{\"color\": log.cacheHit && \"cyan\"}}>{log.keyword}</div>\r\n            {/* <ColorBox cacheHit={log.cacheHit}>{log.keyword}</ColorBox> */}\r\n          </ConditionalTooltip>\r\n          )\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(Log);","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nfunction Worker({gap, workers}) {\r\n  const smallFontSize = `${12 - (workers.length/3)}px`;\r\n  const mediumFontSize = `${15 - (workers.length/3)}px`;\r\n  const bigFontSize = `${25 - (workers.length/3)}px`;\r\n\r\n  return (\r\n      // <Box flexGrow={1} flexBasis={0} bgcolor={brown[800]}>\r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\"\r\n          justifyContent=\"center\" \r\n          alignItems=\"center\" \r\n          flexWrap=\"wrap\" \r\n          flexGrow=\"1\" \r\n          mx={gap} \r\n          overflow=\"hidden\"\r\n          // mb={gap} \r\n          bgcolor={brown[700]}\r\n        >\r\n          {workers.map(worker => \r\n            <Box \r\n              display=\"flex\" \r\n              flexDirection=\"row\" \r\n              justifyContent=\"center\" \r\n              alignItems=\"center\" \r\n              m={1} \r\n              fontSize={mediumFontSize} \r\n              bgcolor={brown[600]}\r\n            >\r\n              <Box display=\"flex\" overflow=\"auto\" justifyContent=\"flex-start\" flexDirection=\"column\" textAlign=\"left\" p={2}>\r\n                <div>PID: {worker.pid}</div>\r\n                <div>WORDS: {worker.words.toLocaleString()}</div>\r\n                <p></p>\r\n                <Box textAlign=\"center\" style={{fontSize:smallFontSize}}>MEM</Box>\r\n                <div style={{fontSize:bigFontSize}}>{worker.mem}</div>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      // </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(Worker);","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport {brown} from '@material-ui/core/colors';\r\n\r\nfunction Cache({gap, caches}) {\r\n  const smallFontSize = `${10 - (caches.length/3)}px`;\r\n  const mediumFontSize = `${13 - (caches.length/3)}px`;\r\n  const bigFontSize = `${22 - (caches.length/3)}px`;\r\n\r\n  return (\r\n    <Box \r\n     display=\"flex\" \r\n     flexDirection=\"row\"\r\n     justifyContent=\"center\" \r\n     alignItems=\"center\" \r\n     flexWrap=\"wrap\" \r\n     height=\"20vh\"\r\n     mx={gap} \r\n     bgcolor={brown[700]}\r\n     overflow=\"hidden\"\r\n    >\r\n      {caches.map(cache => \r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"row\" \r\n          justifyContent=\"center\" \r\n          alignItems=\"center\"\r\n          m={1} \r\n          fontSize={mediumFontSize} \r\n          bgcolor={brown[600]}\r\n        >\r\n          <Box display=\"flex\" overflow=\"auto\" justifyContent=\"flex-start\" flexDirection=\"column\" p={2} textAlign=\"left\">\r\n            <div>PID: {cache.pid}</div>\r\n            <div>COUNT: {cache.cacheCount}</div>\r\n            <div>CACHE HIT: {cache.cacheHit}</div>\r\n            <Box textAlign=\"center\" style={{fontSize:smallFontSize}}>MEM</Box>\r\n            <div style={{fontSize:bigFontSize}}>{cache.mem}</div>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(Cache);","const constants = {   \r\n    SOCKET_NAMESPACE : '/',\r\n    urls : {\r\n        'load': '/loadSong/useWorkers',\r\n        'loadFromDB': '/loadSong/useWorkers?from=db',        \r\n        'clear': '/clearSong',\r\n        'clearCache': '/clearCache'\r\n    }\r\n}\r\n\r\nexport default constants;","import React from 'react';\r\nimport {withStyles} from '@material-ui/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n      color: '#52af77',\r\n      height: '5px',\r\n      padding : 0,\r\n\r\n    },\r\n    // thumb: {\r\n    //   height: 10,\r\n    //   width: 10,\r\n    //   backgroundColor: '#fff',\r\n    //   border: '2px solid currentColor',\r\n    //   marginTop: -8,\r\n    //   marginLeft: -12,\r\n    //   '&:focus,&:hover,&$active': {\r\n    //     boxShadow: 'inherit',\r\n    //   },\r\n    // },\r\n    thumb : {\r\n      display: 'none'\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n      height: 5,\r\n      borderRadius: 0,\r\n    },\r\n    rail: {\r\n      height: 5,\r\n      borderRadius: 0,\r\n    },\r\n  })(Slider);\r\n\r\nconst CustomizedSlider = ({value, onChange}) => {\r\n    return (\r\n        <PrettoSlider value={value} onChange={onChange} valueLabelDisplay=\"auto\"></PrettoSlider>\r\n    )\r\n}\r\n\r\nexport default CustomizedSlider;","import axios from 'axios';\r\nimport CONSTANTS from '../config/Constants';\r\n\r\nconst axiosRequest = {\r\n    async get(type){\r\n        try {\r\n            const url = CONSTANTS.urls[type];\r\n            if(!url) return Promise.resolve({success:false, msg:`not valid type : ${type}`});\r\n            const response = await axios.get(url);\r\n            if(response.status === 200){\r\n                console.log(response.data)\r\n                return response.data;\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n\r\n        }\r\n    },\r\n}\r\n\r\nexport default axiosRequest;","import React, {Component} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport socketIOClient from 'socket.io-client';\r\nimport Header from './components/Header';\r\nimport Title from './components/Title';\r\nimport Master from './components/Master';\r\nimport Scheduler from './components/Scheduler';\r\nimport Log from './components/Log';\r\nimport Worker from './components/Worker';\r\nimport Cache from './components/Cache';\r\nimport Constants from './config/Constants';\r\nimport PrettoSlide from './components/PrettoSlide';\r\nimport {brown} from '@material-ui/core/colors';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport axiosRequest from './lib/axiosRequest';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport './App.css';\r\n\r\nconst BrownButton = withStyles({\r\n  root: {\r\n    backgroundColor: brown[800],\r\n    '&:hover': {\r\n      backgroundColor: brown[500],\r\n    },\r\n    '&:active': {\r\n      backgroundColor: brown[300]\r\n    },\r\n  }\r\n})(Button)\r\n\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      master : {},\r\n      workers : [],\r\n      cacheWorkers : [],\r\n      currentLog : [],\r\n      progress: 0,\r\n      // disableLoadDBBtn: false,\r\n      // disableLoadFileBtn: false,\r\n      // disalbeClearIndexBtn: true,\r\n      // disalbeClearCacheBtn: true,\r\n      onIndexing: false,\r\n      indexDone: true,\r\n      insertCount: 0,\r\n      updateCount: 0,\r\n      deleteCount: 0,\r\n\r\n    }\r\n  }  \r\n  \r\n  componentDidMount(){\r\n    // connect socket server\r\n    const {endpoint} = Constants.SOCKET_NAMESPACE;\r\n    const socket = socketIOClient(endpoint);\r\n    socket.on('connect', () => {\r\n      console.log('socket connected');\r\n    })   \r\n    socket.on('masterMonitor', this.updateMasterMonitor.bind(this));\r\n    socket.on('workerMonitor', this.updateWorkerMonitor.bind(this));\r\n    socket.on('cacheWorkerMonitor', this.updateCacheWorkerMonitor.bind(this));\r\n    socket.on('logMonitor', this.updateLogMonitor.bind(this));\r\n    socket.on('scheuledIndexMonitor', this.updateScheduledIndexMonitor.bind(this));\r\n    socket.on('progress', this.updateProgress.bind(this))\r\n    socket.on('error', this.resetState.bind(this));\r\n    socket.on('disconnect', this.resetState.bind(this));\r\n    socket.on('connect_error', this.resetState.bind(this));\r\n  }\r\n\r\n  updateMasterMonitor(masterMonitor){\r\n    console.log('update master:',masterMonitor)\r\n    const {indexingStatus} = masterMonitor;\r\n    const startingIndex = (indexingStatus === 'INDEX_STARTED');\r\n    const onIndexing = (indexingStatus === 'INDEXING');\r\n    const indexDone = (indexingStatus === 'INDEX_DONE');\r\n    this.setState({\r\n      ...this.state,\r\n      master: masterMonitor,\r\n      startingIndex,\r\n      onIndexing,\r\n      indexDone\r\n    })\r\n  }\r\n\r\n  updateWorkerMonitor(workerMonitor){\r\n    // console.log('update workers:',workerMonitor)\r\n    this.setState({\r\n      ...this.state,\r\n      workers: workerMonitor\r\n    })\r\n  }\r\n\r\n  updateCacheWorkerMonitor(cacheWorkerMonitor){\r\n    this.setState({\r\n      ...this.state,\r\n      cacheWorkers: cacheWorkerMonitor\r\n    })\r\n  }\r\n\r\n  updateLogMonitor(logMonitor){\r\n    console.log('update log:',logMonitor);\r\n    this.setState({\r\n      ...this.state,\r\n      currentLog: logMonitor\r\n    })\r\n  }\r\n\r\n  updateScheduledIndexMonitor(scheduledIndexMonitor){\r\n    const {insertCount, updateCount, deleteCount} = scheduledIndexMonitor;\r\n    this.setState({\r\n      ...this.state,\r\n      insertCount,\r\n      updateCount,\r\n      deleteCount      \r\n    })\r\n  }\r\n\r\n  updateProgress(progress){\r\n    const indexDone = (progress > 99.9);\r\n    console.log('update progress: ',progress, indexDone);\r\n    this.setState({\r\n      ...this.state,\r\n      progress,\r\n      disalbeClearIndexBtn: !indexDone,\r\n      disalbeClearCacheBtn: !indexDone,\r\n      onIndexing: !indexDone\r\n    })\r\n  }\r\n\r\n  resetState(){\r\n    this.setState({\r\n      master : {},\r\n      workers : [],\r\n      currentLog : [],\r\n      cacheWorkers : []\r\n    })\r\n  }\r\n\r\n  onClickLoad =  async () => {\r\n    this.setState({\r\n      ...this.state,\r\n      // disableLoadDBBtn: true,\r\n      // disableLoadFileBtn: true,\r\n      // disalbeClearCacheBtn: true,\r\n      // disalbeClearIndexBtn: true,\r\n      startingIndex: true,\r\n      onIndexing: true,\r\n    })\r\n    const result = await axiosRequest.get('load');\r\n    console.log(result);\r\n  }\r\n\r\n  onClickLoadFromDB = async () => {\r\n    this.setState({\r\n      ...this.state,\r\n      // disableLoadDBBtn: true,\r\n      // disableLoadFileBtn: true,\r\n      // disalbeClearCacheBtn: true,\r\n      // disalbeClearIndexBtn: true,\r\n      startingIndex: true,\r\n      onIndexing: true\r\n    })\r\n    const result = await axiosRequest.get('loadFromDB');\r\n    console.log(result);  \r\n  }\r\n\r\n  onClickClear = async () => {    \r\n    const result = await axiosRequest.get('clear');\r\n    this.setState({\r\n      ...this.state,\r\n      // disableLoadDBBtn: false,\r\n      // disableLoadFileBtn: false\r\n      indexDone: false\r\n    })\r\n    console.log(result);\r\n  }\r\n\r\n  async onClickCacheClear(){\r\n    const result = await axiosRequest.get('clearCache');\r\n    console.log(result);\r\n  }\r\n\r\n  handleSliderChange(){\r\n    console.log('changed');\r\n  }\r\n\r\n  render() {\r\n    const {workers, master, scheduler, currentLog, cacheWorkers, progress} = this.state;\r\n    const {startingIndex, onIndexing, indexDone} = this.state;\r\n    const {insertCount, updateCount, deleteCount} = this.state;\r\n    // const {disalbeClearCacheBtn, disalbeClearIndexBtn} = this.state;\r\n    const disableLoadDBBtn = startingIndex || onIndexing || indexDone;\r\n    const disableLoadFileBtn = startingIndex|| onIndexing || indexDone;\r\n    const disalbeClearIndexBtn = startingIndex || onIndexing || !indexDone;\r\n    const disalbeClearCacheBtn = startingIndex || onIndexing || !indexDone;\r\n    const gap = 0.3;\r\n    return (\r\n      <Box display=\"flex\" flexDirection=\"column\" height=\"100vh\" className=\"App\">\r\n        <Header gap={gap} text={\"Status\"} insert={insertCount} update={updateCount} delete={deleteCount}></Header>\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\" alignItems=\"stretch\" height=\"80vh\">\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow=\"1\" width=\"45vw\"> \r\n            <Title gap={gap} title={'master'}></Title>\r\n            <Master gap={gap} master={master}></Master>\r\n            <Log gap={gap} currentLog={currentLog}></Log>\r\n          </Box>\r\n          <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"flex-start\" alignItems=\"stretch\" flexGrow=\"1\"  width='45vw'> \r\n            <Title gap={gap} title={'cache'}></Title>\r\n            <Cache gap={gap} caches={cacheWorkers}></Cache>            \r\n            <Title gap={gap} title={'worker'}></Title>\r\n            <Worker gap={gap} workers={workers}></Worker>\r\n          </Box>\r\n        </Box>\r\n        <PrettoSlide value={progress} onChange={this.handleSliderChange} aria-labelledby=\"continuous-slider\" />\r\n        <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-around\" alignItems=\"center\" flexGrow=\"1\" mx={gap} mb={gap} bgcolor={brown[900]}>\r\n          <Tooltip open={disableLoadDBBtn} title={onIndexing ? \"Wait indexing...\" : \"Clear Index first!\"} placement=\"right-end\">\r\n            <BrownButton disabled={disableLoadDBBtn} onClick={this.onClickLoadFromDB} variant=\"contained\" color=\"primary\"  size=\"medium\">load from DB</BrownButton>         \r\n          </Tooltip>  \r\n          <Tooltip open={disableLoadFileBtn} title={onIndexing ? \"Wait indexing...\" : \"Clear Index first!\"} placement=\"right-end\">\r\n            <BrownButton disabled={disableLoadFileBtn} onClick={this.onClickLoad} variant=\"contained\" color=\"primary\"  size=\"medium\">load from file</BrownButton> \r\n          </Tooltip> \r\n          <Tooltip open={onIndexing} title=\"Wait indexing...\" placement=\"right-end\">\r\n            <BrownButton disabled={disalbeClearIndexBtn} onClick={this.onClickClear} variant=\"contained\" color=\"primary\"  size=\"medium\">clear index</BrownButton>\r\n          </Tooltip> \r\n            <BrownButton disabled={disalbeClearCacheBtn} onClick={this.onClickCacheClear} variant=\"contained\" color=\"primary\"  size=\"medium\">clear cache</BrownButton>\r\n          </Box>\r\n      </Box>\r\n    )\r\n  }\r\n} ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}